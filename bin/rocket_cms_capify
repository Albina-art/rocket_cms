#!/usr/bin/env ruby
# encoding: utf-8

require 'thor'

module RocketCMS
  class Capify < Thor::Group
    include Thor::Actions

    no_commands do
      def load_env
        return if defined?(Rails)
        require File.expand_path("../../../config/environment", __FILE__)
      end
    end

    class_option :mongoid, default: false

    argument :app_name, type: :string
    argument :domain, type: :string
    argument :port, type: :string, optional: true

    source_root File.expand_path('../../lib/generators/rocket_cms/templates', __FILE__)

    #def app_name
      #Rails.application.class.name.split("::")[0]
    #end

    def deploy_to
      "/data/#{app_name.downcase}/app"
    end
    def tmp_path
      "/data/#{app_name.downcase}/tmp_dump"
    end

    desc "Generate Capistrano config"
    def capify
      if options[:mongoid]
        def RocketCMS.mongoid?
          true
        end
      else
        def RocketCMS.mongoid?
          true
        end
      end
      copy_file "Capfile", "Capfile"
      p port
      unless port.nil?
        template "unicorn.erb", "config/unicorn/production.rb"
      end
      template "deploy.erb", "config/deploy.rb"
      template "production.erb", "config/deploy/production.rb"
      template "dl.erb", "lib/tasks/dl.thor"
      puts "all ok"
    end
  end
end

RocketCMS::Capify.start
